/*
 * Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.28 at 04:17:44 PM MSK 
//


package javasoft.sqe.jaxb.tgxml.testgen;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "requiredResource",
    "attrElem",
    "targetSpec",
    "keyword",
    "context",
    "executeClass",
    "executeNative",
    "executeArgs",
    "remote",
    "rmicClasses",
    "selectIf",
    "timeout"
})
@XmlRootElement(name = "TestGroupAttributes")
public class TestGroupAttributes {

    @XmlElement(name = "RequiredResource")
    protected List<RequiredResource> requiredResource;
    @XmlElement(name = "AttrElem")
    protected List<AttrElem> attrElem;
    @XmlElement(name = "TargetSpec")
    protected List<TargetSpec> targetSpec;
    @XmlElement(name = "Keyword")
    protected List<Keyword> keyword;
    @XmlElement(name = "Context")
    protected String context;
    @XmlElement(name = "ExecuteClass")
    protected String executeClass;
    @XmlElement(name = "ExecuteNative")
    protected String executeNative;
    @XmlElement(name = "ExecuteArgs")
    protected String executeArgs;
    @XmlElement(name = "Remote")
    protected List<Remote> remote;
    @XmlElement(name = "RMICClasses")
    protected String rmicClasses;
    @XmlElement(name = "SelectIf")
    protected List<SelectIf> selectIf;
    @XmlElement(name = "Timeout")
    protected String timeout;

    /**
     * Gets the value of the requiredResource property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the requiredResource property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRequiredResource().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link RequiredResource }
     * 
     * 
     */
    public List<RequiredResource> getRequiredResource() {
        if (requiredResource == null) {
            requiredResource = new ArrayList<RequiredResource>();
        }
        return this.requiredResource;
    }

    /**
     * Gets the value of the attrElem property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the attrElem property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAttrElem().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AttrElem }
     * 
     * 
     */
    public List<AttrElem> getAttrElem() {
        if (attrElem == null) {
            attrElem = new ArrayList<AttrElem>();
        }
        return this.attrElem;
    }

    /**
     * Gets the value of the targetSpec property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the targetSpec property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getTargetSpec().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link TargetSpec }
     * 
     * 
     */
    public List<TargetSpec> getTargetSpec() {
        if (targetSpec == null) {
            targetSpec = new ArrayList<TargetSpec>();
        }
        return this.targetSpec;
    }

    /**
     * Gets the value of the keyword property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the keyword property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getKeyword().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Keyword }
     * 
     * 
     */
    public List<Keyword> getKeyword() {
        if (keyword == null) {
            keyword = new ArrayList<Keyword>();
        }
        return this.keyword;
    }

    /**
     * Gets the value of the context property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getContext() {
        return context;
    }

    /**
     * Sets the value of the context property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setContext(String value) {
        this.context = value;
    }

    /**
     * Gets the value of the executeClass property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExecuteClass() {
        return executeClass;
    }

    /**
     * Sets the value of the executeClass property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExecuteClass(String value) {
        this.executeClass = value;
    }

    /**
     * Gets the value of the executeNative property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExecuteNative() {
        return executeNative;
    }

    /**
     * Sets the value of the executeNative property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExecuteNative(String value) {
        this.executeNative = value;
    }

    /**
     * Gets the value of the executeArgs property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExecuteArgs() {
        return executeArgs;
    }

    /**
     * Sets the value of the executeArgs property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExecuteArgs(String value) {
        this.executeArgs = value;
    }

    /**
     * Gets the value of the remote property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the remote property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getRemote().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Remote }
     * 
     * 
     */
    public List<Remote> getRemote() {
        if (remote == null) {
            remote = new ArrayList<Remote>();
        }
        return this.remote;
    }

    /**
     * Gets the value of the rmicClasses property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getRMICClasses() {
        return rmicClasses;
    }

    /**
     * Sets the value of the rmicClasses property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setRMICClasses(String value) {
        this.rmicClasses = value;
    }

    /**
     * Gets the value of the selectIf property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the selectIf property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSelectIf().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SelectIf }
     * 
     * 
     */
    public List<SelectIf> getSelectIf() {
        if (selectIf == null) {
            selectIf = new ArrayList<SelectIf>();
        }
        return this.selectIf;
    }

    /**
     * Gets the value of the timeout property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTimeout() {
        return timeout;
    }

    /**
     * Sets the value of the timeout property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTimeout(String value) {
        this.timeout = value;
    }

}
