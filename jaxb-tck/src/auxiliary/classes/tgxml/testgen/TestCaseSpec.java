/*
 * Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.0 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2007.02.28 at 04:17:44 PM MSK 
//


package javasoft.sqe.jaxb.tgxml.testgen;

import java.util.ArrayList;
import java.util.List;
import jakarta.xml.bind.annotation.XmlAccessType;
import jakarta.xml.bind.annotation.XmlAccessorType;
import jakarta.xml.bind.annotation.XmlElement;
import jakarta.xml.bind.annotation.XmlElements;
import jakarta.xml.bind.annotation.XmlRootElement;
import jakarta.xml.bind.annotation.XmlType;


/**
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "assertionRefOrInlineAssertion",
    "testTechnique",
    "memberSig",
    "input",
    "precondition",
    "expectedResultValue",
    "expectedResultSideEffect",
    "expectedResultException",
    "specElem"
})
@XmlRootElement(name = "TestCaseSpec")
public class TestCaseSpec {

    @XmlElements({
        @XmlElement(name = "AssertionRef", type = AssertionRef.class),
        @XmlElement(name = "InlineAssertion", type = InlineAssertion.class)
    })
    protected List<Object> assertionRefOrInlineAssertion;
    @XmlElement(name = "TestTechnique")
    protected TestTechnique testTechnique;
    @XmlElement(name = "MemberSig")
    protected String memberSig;
    @XmlElement(name = "Input")
    protected List<Input> input;
    @XmlElement(name = "Precondition")
    protected List<Precondition> precondition;
    @XmlElement(name = "ExpectedResultValue")
    protected String expectedResultValue;
    @XmlElement(name = "ExpectedResultSideEffect")
    protected List<ExpectedResultSideEffect> expectedResultSideEffect;
    @XmlElement(name = "ExpectedResultException")
    protected List<ExpectedResultException> expectedResultException;
    @XmlElement(name = "SpecElem")
    protected List<SpecElem> specElem;

    /**
     * Gets the value of the assertionRefOrInlineAssertion property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the assertionRefOrInlineAssertion property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAssertionRefOrInlineAssertion().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link AssertionRef }
     * {@link InlineAssertion }
     * 
     * 
     */
    public List<Object> getAssertionRefOrInlineAssertion() {
        if (assertionRefOrInlineAssertion == null) {
            assertionRefOrInlineAssertion = new ArrayList<Object>();
        }
        return this.assertionRefOrInlineAssertion;
    }

    /**
     * Gets the value of the testTechnique property.
     * 
     * @return
     *     possible object is
     *     {@link TestTechnique }
     *     
     */
    public TestTechnique getTestTechnique() {
        return testTechnique;
    }

    /**
     * Sets the value of the testTechnique property.
     * 
     * @param value
     *     allowed object is
     *     {@link TestTechnique }
     *     
     */
    public void setTestTechnique(TestTechnique value) {
        this.testTechnique = value;
    }

    /**
     * Gets the value of the memberSig property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getMemberSig() {
        return memberSig;
    }

    /**
     * Sets the value of the memberSig property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setMemberSig(String value) {
        this.memberSig = value;
    }

    /**
     * Gets the value of the input property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the input property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInput().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Input }
     * 
     * 
     */
    public List<Input> getInput() {
        if (input == null) {
            input = new ArrayList<Input>();
        }
        return this.input;
    }

    /**
     * Gets the value of the precondition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the precondition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPrecondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Precondition }
     * 
     * 
     */
    public List<Precondition> getPrecondition() {
        if (precondition == null) {
            precondition = new ArrayList<Precondition>();
        }
        return this.precondition;
    }

    /**
     * Gets the value of the expectedResultValue property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getExpectedResultValue() {
        return expectedResultValue;
    }

    /**
     * Sets the value of the expectedResultValue property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setExpectedResultValue(String value) {
        this.expectedResultValue = value;
    }

    /**
     * Gets the value of the expectedResultSideEffect property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the expectedResultSideEffect property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExpectedResultSideEffect().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExpectedResultSideEffect }
     * 
     * 
     */
    public List<ExpectedResultSideEffect> getExpectedResultSideEffect() {
        if (expectedResultSideEffect == null) {
            expectedResultSideEffect = new ArrayList<ExpectedResultSideEffect>();
        }
        return this.expectedResultSideEffect;
    }

    /**
     * Gets the value of the expectedResultException property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the expectedResultException property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getExpectedResultException().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ExpectedResultException }
     * 
     * 
     */
    public List<ExpectedResultException> getExpectedResultException() {
        if (expectedResultException == null) {
            expectedResultException = new ArrayList<ExpectedResultException>();
        }
        return this.expectedResultException;
    }

    /**
     * Gets the value of the specElem property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the specElem property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSpecElem().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SpecElem }
     * 
     * 
     */
    public List<SpecElem> getSpecElem() {
        if (specElem == null) {
            specElem = new ArrayList<SpecElem>();
        }
        return this.specElem;
    }

}
