<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TestGroup SYSTEM "testgenspec.dtd">
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<TestGroup ID="totalDigits3_GetSet">
    <TestGroupDocumentation>
        <Title><![CDATA[totalDigits3 GetSet Tree Content tests  ]]></Title>
        <Description><![CDATA[
      The tests for checking the content of trees got by unmarshalling
      of the totalDigits-3.xsd based XML documents and created dynamically via ObjectFactory. 
      The schema defines a byte restricted SimpleType with totalDigits value 3.
      Various XML documents specify various values in the element.
      ]]></Description>
    </TestGroupDocumentation>
    <TestGroupAttributes>
        <AttrElem Name="scInfo">@(#)totalDigits3_GetSet.test.xml	1.6 08/01/24</AttrElem>
        <AttrElem Name="testType">JAXBXMLSchemaTest</AttrElem>
    </TestGroupAttributes>
    <CodeSet>
        <Import>jakarta.xml.bind.*</Import>
        <ExternalSupportClass SourceName="totalDigits-3.xsd"/>
        <ExternalData Type="iodata" SourceName="totalDigits3_GetSet.sig"/>
    </CodeSet>
    <TestCase ID="GetSet001">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML byte totalDigits-3.xsd, unmarshalled content tree GetSet test]]></Title>
            <Description><![CDATA[
The test unmarshalls totalDigits-3-1.xml,...,totalDigits-3-5.xml documents which specify
the values 4, 15, 119, 5, 43 for the byte restricted SimpleType NISTSchema-byte-totalDigits-3
element and expects that elemObj.getValue() returns specified in xml value, then invokes 
elemObj.setValue(byte), elemObj.getValue() should return set value.
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="totalDigits-3-1.xml"/>
            <ExternalData Type="iodata" SourceName="totalDigits-3-2.xml"/>
            <ExternalData Type="iodata" SourceName="totalDigits-3-3.xml"/>
            <ExternalData Type="iodata" SourceName="totalDigits-3-4.xml"/>
            <ExternalData Type="iodata" SourceName="totalDigits-3-5.xml"/>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        String[] xmlDocNames = {
            "totalDigits-3-1.xml", "totalDigits-3-2.xml", "totalDigits-3-3.xml",
            "totalDigits-3-4.xml", "totalDigits-3-5.xml"
        };
        byte[] expectedValues = {(byte)4, (byte)15, (byte)119, (byte)5, (byte)43};
        byte[] anExpectedValues = {(byte)-128, (byte)-54, (byte)0, (byte)54, (byte)125};
        
        for (int i = 0; i < xmlDocNames.length; ++i){
            JAXBElement<Byte> elemObj = (JAXBElement<Byte>)unmarshal(xmlDocNames[i]);
            if (elemObj.getValue() != expectedValues[i]){
                return Status.failed("used XML document: " + xmlDocNames[i] + ", elemObj.getValue() != " + expectedValues[i]);
            }
            elemObj.setValue(anExpectedValues[i]);
            if (elemObj.getValue() != anExpectedValues[i]){
                return Status.failed("used XML document: " + xmlDocNames[i] + ", elemObj.setValue(" + anExpectedValues[i] + 
                    ") invoked, " + "elemObj.getValue() != " + anExpectedValues[i]);
            }
        }
        return Status.passed("OKAY");

      ]]></TestCode>
    </TestCase>
    <TestCase ID="GetSet002">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML byte totalDigits-3.xsd GetSet test for dynamically created content tree ]]></Title>
            <Description><![CDATA[
The test creates an instance of byte restricted SimpleType NISTSchema-byte-totalDigits-3 type
with the values -128, -54, 0, 54, 125 and expects that elemObj.getValue() returns specified 
values, then invokes elemObj.setValue(byte) with various values, elemObj.getValue() should return
set values.
         ]]></Description>
        </TestCaseDocumentation>
        <TestCode SourceLang="java"><![CDATA[
        byte[] setValues = {(byte)-128, (byte)-54, (byte)0, (byte)54, (byte)125};
        byte[] anSetValues = {(byte)-126, (byte)-50, (byte)0, (byte)50, (byte)127};
        JAXBElement<Byte> elemObj = null;
        for (int i = 0; i < setValues.length; ++i){
            
                elemObj = (JAXBElement<Byte>)(new ObjectFactory()).createNISTSchemaByteTotalDigits3(setValues[i]);
            
            if (elemObj.getValue() != setValues[i]){
                return Status.failed("dynamically created JAXBElement<Byte>, elemObj.getValue() != " + setValues[i]);
            }
            elemObj.setValue(anSetValues[i]);
            if (elemObj.getValue() != anSetValues[i]){
                return Status.failed("dynamically created JAXBElement<Byte>, elemObj.setValue(" + anSetValues[i] + 
                    ") invoked, " + "elemObj.getValue() != " + anSetValues[i]);
            }
        }
        return Status.passed("OKAY");

      ]]></TestCode>
    </TestCase>
</TestGroup>
