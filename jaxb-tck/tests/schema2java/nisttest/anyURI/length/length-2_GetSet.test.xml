<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TestGroup SYSTEM "testgenspec.dtd">
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<TestGroup ID="length2_GetSet">
    <TestGroupDocumentation>
        <Title><![CDATA[length2 GetSet Tree Content tests]]></Title>
        <Description><![CDATA[
      The tests for validating the content of changed trees got by unmarshalling
      of the length-2.xsd based XML documents or created dynamically 
      via ObjectFactory.
      The schema defines an anyURI restricted SimpleType with length value 48.
      Various XML documents specify various values in the element.
      ]]></Description>
    </TestGroupDocumentation>
    <TestGroupAttributes>
        <AttrElem Name="scInfo">@(#)length-2_GetSet.test.xml	1.5 08/01/24</AttrElem>
        <AttrElem Name="testType">JAXBXMLSchemaTest</AttrElem>
    </TestGroupAttributes>
    <CodeSet>
        <Import>jakarta.xml.bind.*</Import>
        <SupportCode>
    JAXBElement&lt;String&gt; elemObj;
      </SupportCode>
        <ExternalSupportClass SourceName="length-2.xsd"/>
        <ExternalData Type="iodata" SourceName="length2_GetSet.sig"/>
    </CodeSet>
    <TestCase ID="GetSet001">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI length-2.xsd, unmarshalled content tree GetSet test]]></Title>
            <Description><![CDATA[
The test unmarshalls length-2-1.xml, length-2-2.xml, length-2-3.xml, 
length-2-4.xml, length-2-5.xml documents which specify
the values 
"ftp://ftp.securityfordisseminateusestoperva.edu/",
"mailto:applicationsbusi@personalandtheXMLfor.gov",
"ftp://availableandtopervasivetheNISTSunsyst.org/",
"ftp://ftp.matchandofverticaltestingNSRLandc.edu/",
"http://requestingoftestingmeasurementtheane.edu/"
for the anyURI restricted SimpleType NISTSchema-anyURI-length-2 element and 
expects that elemObj.getValue() returns appropriate String, then 
invokes elemObj.setValue(String), elemObj.getValue() should return set value.
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="length-2-1.xml"/>
            <ExternalData Type="iodata" SourceName="length-2-2.xml"/>
            <ExternalData Type="iodata" SourceName="length-2-3.xml"/>
            <ExternalData Type="iodata" SourceName="length-2-4.xml"/>
            <ExternalData Type="iodata" SourceName="length-2-5.xml"/>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        String[] xmlDocNames = {
            "length-2-1.xml", "length-2-2.xml", "length-2-3.xml",
            "length-2-4.xml", "length-2-5.xml"
        };
        String [] initialValues = {
            "ftp://ftp.securityfordisseminateusestoperva.edu/",
            "mailto:applicationsbusi@personalandtheXMLfor.gov",
            "ftp://availableandtopervasivetheNISTSunsyst.org/",
            "ftp://ftp.matchandofverticaltestingNSRLandc.edu/",
            "http://requestingoftestingmeasurementtheane.edu/"
        };
        String [] setValues = {
            "ftp://ftp.foo.foo/fo/foo/foo/foo/foo/foo/foo/foo",
            "foo.foo/fo/foo/foo/foo/foo/foo/foo/foo/foo/fooo/",
            "ftp://ftp.securityfordisseminateusestoperva.edu/",
            "mailto:applicationsbusi@personalandtheXMLfor.gov",
            "ftp://availableandtopervasivetheNISTSunsyst.org/",
        };
        for (int i = 0; i < xmlDocNames.length; ++i){
            JAXBElement<String> elemObj = (JAXBElement<String>)unmarshal(xmlDocNames[i]);
            if (!elemObj.getValue().equals(initialValues[i])){
                return Status.failed("used XML document: " + xmlDocNames[i] + ", elemObj.getValue() != " + initialValues[i]);
            }
            elemObj.setValue(setValues[i]);
            if (!elemObj.getValue().equals(setValues[i])){
                return Status.failed("used XML document: " + xmlDocNames[i] + ", elemObj.setValue(" + setValues[i] + 
                    ") invoked, " + "elemObj.getValue() != " + setValues[i]);
            }
        }
        return Status.passed("OKAY");

      ]]></TestCode>
    </TestCase>
    <TestCase ID="GetSet002">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI length-2.xsd GetSet test for dynamically created content tree]]></Title>
            <Description><![CDATA[
The test creates an instance of anyURI restricted SimpleType NISTSchema-anyURI-length-2 type
with the values 
"ftp://ftp.securityfordisseminateusestoperva.edu",
"mailto:applicationsbusi@personalandtheXMLfor.gov",
"ftp://availableandtopervasivetheNISTSunsyst.org",
"ftp://ftp.matchandofverticaltestingNSRLandc.edu",
"http://requestingoftestingmeasurementtheane.edu"
and expects that 
elemObj.getValue() returns specified values, then invokes elemObj.setValue(String) with 
various values, elemObj.getValue() should return set values.
         ]]></Description>
        </TestCaseDocumentation>
        <TestCode SourceLang="java"><![CDATA[
        String [] initialValues = {
            "ftp://ftp.securityfordisseminateusestoperva.edu",
            "mailto:applicationsbusi@personalandtheXMLfor.gov",
            "ftp://availableandtopervasivetheNISTSunsyst.org",
            "ftp://ftp.matchandofverticaltestingNSRLandc.edu",
            "http://requestingoftestingmeasurementtheane.edu"
        };
        String [] setValues = {
            "ftp://ftp.foo.foo/fo/foo/foo/foo/foo/foo/foo-oo",
            "foo.foo/fo/foo/foo/foo/foo/foo/foo/foo/foo/fooo",
            "ftp://ftp.securityfordisseminateusestoperva.edu",
            "mailto:applicationsbusi@personalandtheXMLfor.gov",
            "ftp://availableandtopervasivetheNISTSunsyst.org",
        };
        for (int i = 0; i < initialValues.length; ++i){
            
                elemObj = (JAXBElement<String>)(new ObjectFactory()).createNISTSchemaAnyURILength2(initialValues[i]);
            
            if (!elemObj.getValue().equals(initialValues[i])){
                return Status.failed("dynamically created JAXBElement<String>, elemObj.getValue() != " + initialValues[i]);
            }
            elemObj.setValue(setValues[i]);
            if (!elemObj.getValue().equals(setValues[i])){
                return Status.failed("dynamically created JAXBElement<String>, elemObj.setValue(" + setValues[i] + 
                    ") invoked, " + "elemObj.getValue() != " + setValues[i]);
            }
        }
        return Status.passed("OKAY");

      ]]></TestCode>
    </TestCase>
</TestGroup>
