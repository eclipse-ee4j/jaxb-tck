<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE TestGroup SYSTEM "testgenspec.dtd">
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<TestGroup ID="pattern1_Validate">
    <TestGroupDocumentation>
        <Title><![CDATA[pattern1 Validate Tree Content tests]]></Title>
        <Description><![CDATA[
      The tests for validating the content of changed trees got by unmarshalling
      of the pattern-1.xsd based XML documents or created dynamically 
      via ObjectFactory.
      The schema defines an anyURI restricted SimpleType with pattern value 
      "ftp://ftp.[a-z]{12}.com".
      Various XML documents specify various values in the element.
      ]]></Description>
    </TestGroupDocumentation>
    <TestGroupAttributes>
        <AttrElem Name="scInfo">@(#)pattern-1_Validate.test.xml	1.5 08/01/24</AttrElem>
        <AttrElem Name="testType">JAXBXMLSchemaTest</AttrElem>
    </TestGroupAttributes>
    <CodeSet>
        <Import>jakarta.xml.bind.*</Import>
        <Import>jakarta.xml.bind.TypeConstraintException</Import>
        <SupportCode>
    final String[] validValues = {
        "ftp://ftp.guidelinesdu.com",
        "ftp://ftp.theinstandar.com",
        "ftp://ftp.intherelated.com",
        "ftp://ftp.forenvironme.com",
        "ftp://ftp.buildroleand.com"
    };
    
    final String[] invalidValues = {
        "", 
        "ftp://ftp.guidelinesd1.com",
        "ftp://ftp.theinstandar.edu",
        "http://ftp.theinstandar.com",
    };
    
    JAXBElement&lt;String&gt; elemObj;

    Status testInvalid() {
        for (int i = 0; i &lt; invalidValues.length; ++i){
            
                elemObj.setValue(invalidValues[i]);
                Status status = validate(elemObj);
                if (status.isPassed()) {
                    return Status.failed("" + invalidValues[i] + " is unexpectedly valid");
                }
            
        }
        return Status.passed("OK");
    }

    Status testValid() {
        for (int i = 0; i &lt; validValues.length; ++i){
            elemObj.setValue(validValues[i]);
            Status status = validate(elemObj);
            if (!status.isPassed()){
                return Status.failed("" + validValues[i] + " is unexpectedly invalid");
            }
        }
        return Status.passed("OKAY");
    }
      </SupportCode>
        <ExternalSupportClass SourceName="pattern-1.xsd"/>
        <ExternalData Type="iodata" SourceName="pattern1_Validate.sig"/>
    </CodeSet>
    <TestCase ID="Unmarshalled001">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI pattern-1.xsd, validate unmarshalled then legally changed content tree]]></Title>
            <Description><![CDATA[
The test unmarshalls pattern-1-4.xml document, sets 
valid values 
        "ftp://ftp.guidelinesdu.com",
        "ftp://ftp.theinstandar.com",
        "ftp://ftp.intherelated.com",
        "ftp://ftp.forenvironme.com",
        "ftp://ftp.buildroleand.com"
for the anyURI restricted SimpleType NISTSchema-anyURI-pattern-1 element and 
expects validation to pass. 
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="pattern-1-4.xml"/>
            <ExternalData Type="iodata" SourceName="pattern1_validate-pattern-1-4.jbx"/>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        elemObj = (JAXBElement<String>)unmarshal("pattern-1-4.xml");
        return testValid();
      ]]></TestCode>
    </TestCase>
    <TestCase ID="Unmarshalled002">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI pattern-1.xsd, validate unmarshalled then illegally changed content tree]]></Title>
            <Description><![CDATA[
The test unmarshalls pattern-1-4.xml document, sets the invalid values 
        "", 
        "ftp://ftp.guidelinesd1.com",
        "ftp://ftp.theinstandar.edu",
        "http://ftp.theinstandar.com",
for the anyURI
restricted SimpleType NISTSchema-anyURI-pattern-1 element and expects 
validation to fail. 
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <ExternalData Type="iodata" SourceName="pattern-1-4.xml"/>
            <ExternalData Type="iodata" SourceName="pattern1_validate-pattern-1-4.jbx"/>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        elemObj = (JAXBElement<String>)unmarshal("pattern-1-4.xml");
        return testInvalid();
      ]]></TestCode>
    </TestCase>
    <TestCase ID="Created001">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI pattern-1.xsd, validate created content tree with valid content]]></Title>
            <Description><![CDATA[
The test creates the anyURI restricted SimpleType NISTSchema-anyURI-pattern-1 element with
a valid value, sets its value to 
        "ftp://ftp.guidelinesdu.com",
        "ftp://ftp.theinstandar.com",
        "ftp://ftp.intherelated.com",
        "ftp://ftp.forenvironme.com",
        "ftp://ftp.buildroleand.com"
and expects validation to pass. 
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <Import>jakarta.xml.bind.JAXBException</Import>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        
            elemObj = (JAXBElement<String>)(new ObjectFactory()).createNISTSchemaAnyURIPattern1(validValues[0]);
        
        return testValid();
      ]]></TestCode>
    </TestCase>
    <TestCase ID="Created002">
        <TestCaseDocumentation>
            <Title><![CDATA[NIST XML anyURI pattern-1.xsd, validate created content tree with invalid content]]></Title>
            <Description><![CDATA[
The test creates the anyURI restricted SimpleType NISTSchema-anyURI-pattern-1 element with
a valid value, sets its value to 
        "", 
        "ftp://ftp.guidelinesd1.com",
        "ftp://ftp.theinstandar.edu",
        "http://ftp.theinstandar.com",
then expects validation to fail. 
         ]]></Description>
        </TestCaseDocumentation>
        <CodeSet>
            <Import>jakarta.xml.bind.JAXBException</Import>
            <ExternalData Type="iodata" SourceName="pattern-1-4.xml"/>
            <ExternalData Type="iodata" SourceName="pattern1_validate-pattern-1-4.jbx"/>
        </CodeSet>
        <TestCode SourceLang="java"><![CDATA[
        
            elemObj = (JAXBElement<String>)(new ObjectFactory()).createNISTSchemaAnyURIPattern1(validValues[0]);
        
        return testInvalid();
      ]]></TestCode>
    </TestCase>
</TestGroup>
