<?xml version="1.0"?>
<!--

    Copyright (c) 2018, 2020 Oracle and/or its affiliates. All rights reserved.

    This program and the accompanying materials are made available under the
    terms of the Eclipse Public License v. 2.0, which is available at
    http://www.eclipse.org/legal/epl-2.0.

    This Source Code may also be made available under the following Secondary
    Licenses when the conditions for such availability set forth in the
    Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
    version 2 with the GNU Classpath Exception, which is available at
    https://www.gnu.org/software/classpath/license.html.

    SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0

-->

<!-- ======================================================================
	Feb 28, 2005 8:05:02 PM                                                        
	
	common tests tasks    
	this build file included in every generated script for generate signatures
	
	vs153345
	SCCS: @(#)commontest.xml	1.16 07/05/03                                                                
	====================================================================== -->
<project name="common tests tasks" default="generate.sig">
	<description>
		this build file included in every generated script for generate
		signatures
	</description>

	<!-- ================================= 
		these properties must be defined externally
		================================= -->
	<property name="source" value="" />
	<property name="packagename" value="" />
	<property name="testname" value="test" />
	<property name="testgroup" value="test" />

	<!-- ================================= 
		inherited properties
		================================= -->
	<property file="build.properties" />
	<property name="jaxb.home" value="/export/tech/jaxb-ri" />
	<property name="jct-tools.dir" value="default" />
	<property name="schema-compile.dir" value="${basedir}/build/${testname}/src" />
	<property name="compile.dir" value="build/${testname}/classes" />
	<property name="sigtest.jar" location="${sigtest.lib.dir}/${sigtest.jar.name}" />
	<property name="dest.dir" value="" />
	<property name="sigfile-name" value="${testgroup}.sig" />
	<property name="sigfile" value="${basedir}${file.separator}${sigfile-name}" />
	<property name="exlude-list" value="" />

	<dependset>
		<srcfileset>
			<filename name="${source}" />
			<filename name="${ant.file}" />
		</srcfileset>
		<targetfileset dir=".">
			<include name="${schema-compile.dir}/**/*.java" />
			<include name="${compile.dir}/**/*.class" />
			<filename name="${sigfile}" />
		</targetfileset>
	</dependset>

	<available property="sigfile_exists" file="${sigfile}" />

	
	<condition property="excluded">
		<contains string="${exclude-list}" substring="${testgroup}" />
	</condition>

	<condition property="skip">
		<or>
			<isset property="notrequired" />
			<isset property="sigfile_exists" />
			<isset property="excluded" />
		</or>
	</condition>

	<condition property="skip.sig.generation">
		<or>
			<isset property="sigfile_exists" />
			<isset property="notrequired" />
		</or>
	</condition>

	<condition property="skip.jbxml.generation">
		<or>
			<isset property="notrequired" />
		</or>
	</condition>

	<path id="tasks.path">
		<fileset dir="${jaxb.home}" includes="lib/*.jar" />
		<pathelement path="${build.dir}/classes"/>
		<fileset dir="${jct-tools.dir}" includes="lib/*.jar" />
		<pathelement path="${compile.dir}" />
	</path>
	<path id="classpath">
		<pathelement path="${compile.dir}" />
		<fileset dir="${jaxb.home}" includes="lib/*.jar" />
	</path>

	<path id="sigtest.classpath">
		<pathelement path="${build.dir}/classes" />
		<pathelement path="${sigtest.jar}" />
		<pathelement path="${compile.dir}" />
		<pathelement path="${java.home}/lib/rt.jar" />
		<fileset dir="${jaxb.home}" includes="mod/*.jar" />
		<pathelement path="${compile.dir}" />
		<fileset dir="${jct-tools.dir}" includes="lib/*.jar" />
	</path>

	<pathconvert targetos="unix" property="sig.classpath.property">
		<path refid="sigtest.classpath" />
	</pathconvert>
	
	<whichresource class="com.sun.tools.xjc.XJCTask" property="xjc.task.source">
	    <classpath refid="tasks.path"/>
	</whichresource>
	<echo>Using XJC task definition from ${xjc.task.source}</echo>
	<whichresource class="jakarta.xml.bind.JAXBContext" property="jaxbcontext.source">
	    <classpath refid="tasks.path"/>
	</whichresource>
	<echo>Using JAXBContext definition from ${jaxbcontext.source}</echo>
	
	<taskdef name="xjc" classname="com.sun.tools.xjc.XJCTask" classpathref="tasks.path" loaderref="libs.loader">
	</taskdef>


	<macrodef name="signaturest">
		<attribute name="sigfile" />
		<attribute name="package" />
		<sequential>
			<java classname="com.sun.tdk.signaturetest.Setup" fork="true">
				<arg value="-static" />
				<arg line="-Filename @{sigfile}" />
				<arg line="-package @{package}" />
				<arg line="-classpath ${sig.classpath.property}" />
				<arg line="-Exclude ${packagename}.ObjectFactory" />
				<arg line="-Exclude ${packagename}.package-info" />
				<classpath>
					<path refid="sigtest.classpath" />
				</classpath>
			</java>
		</sequential>
	</macrodef>


	<!-- ================================= 
		targets definitions
		================================= -->

	<target name="prepare">
		<mkdir dir="${compile.dir}" />
		<mkdir dir="${schema-compile.dir}" />
		<echoproperties>
			<propertyset id="setup">
				<propertyref name="testgroup" />
				<propertyref name="testname" />
				<propertyref name="packagename" />
				<propertyref name="source" />
				<propertyref name="sigfile-name" />
			</propertyset>
		</echoproperties>

	</target>
	<!-- ================================= 
		target: compile.schemas              
		================================= -->
	<target name="compile.schemas" depends="prepare" description="--> description">
		<xjc schema="${source}" package="${packagename}" destdir="${schema-compile.dir}">
			<produces dir="${schema-compile.dir}" includes="**/*.java" />
		</xjc>
		<javac srcdir="${schema-compile.dir}" includes="**/*.java" destdir="${compile.dir}" classpathref="classpath" />
	</target>
	<!-- ================================= 
		target: generate.sig              
		================================= -->
	<target name="generate.sig" depends="compile.schemas" unless="skip.sig.generation">
		<signaturest sigfile="${sigfile}" package="${packagename}" />
	</target>

	<target name="default" unless="skip">
		<antcall target="generate.sig" />
	</target>

	<target name="clean">
		<delete dir="${schema-compile.dir}" />
		<delete dir="${compile.dir}" />
	</target>

	<!-- ================================= 
		target: generate.jb.xml              
		================================= -->
	<target name="generate.jbxml" depends="compile.schemas" unless="skip.jbxml.generation" description="--> generates jb.xml files">
	    <typedef name="jbxml-generate" classpathref="tasks.path"
	      classname="com.sun.ant.tools.JBGenerateTask">
	    </typedef>
            <antcall target="serialize.jbxml" />
	</target>

	<!-- ================================= 
          target: generate              
         ================================= -->
    <target name="generate" depends="generate.jbxml,generate.sig" description="--> Generates signatures and jb.xml">
        <echo>Generation complete</echo> 
    	<echo>	Package: ${packagename} </echo>
        <echo>	Source name: ${source}</echo>
    </target>
</project>

